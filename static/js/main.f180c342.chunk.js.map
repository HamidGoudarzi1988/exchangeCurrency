{"version":3,"sources":["components/CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","amount","onChangeAmount","className","type","value","onChange","map","option","key","URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","console","log","firstCurrency","Object","keys","rates","base","class","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAEe,SAASA,EAAYC,GAAQ,IAEpCC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,iBACAC,EAGAH,EAHAG,iBACAC,EAEAJ,EAFAI,OACAC,EACAL,EADAK,eAEJ,OACI,yBAAKC,UAAU,WACX,+BACI,2BAAOC,KAAK,SAASD,UAAU,gBAAgBE,MAAOJ,EAAQK,SAAUJ,KAE5E,4BAAQC,UAAU,OAAOE,MAAON,EAAkBO,SAAUN,GACvDF,EAAgBS,KAAI,SAAAC,GAAM,OACvB,4BAAQC,IAAKD,EAAQH,MAAOG,GAASA,QCVzD,IAAME,EAAM,yCA+EGC,MA5Ef,WAAgB,IAQVC,EAAUC,EARD,EACiCC,mBAAS,IAD1C,mBACNhB,EADM,KACWiB,EADX,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAI2BL,qBAJ3B,mBAINM,EAJM,KAIQC,EAJR,OAKeP,mBAAS,GALxB,mBAKNb,EALM,KAKEqB,EALF,OAM2CR,oBAAS,GANpD,mBAMNS,EANM,KAMgBC,EANhB,KAkDb,OAzCID,GACFV,EAAaZ,EACbW,EAAWX,EAASmB,IAEpBR,EAAWX,EACXY,EAAaZ,EAASmB,GAKxBK,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZ,IAAMG,EAAgBC,OAAOC,KAAKL,EAAKM,OAAO,GAC9CrB,EAAmB,CAACe,EAAKO,MAAP,mBAAgBH,OAAOC,KAAKL,EAAKM,UACnDnB,EAAgBa,EAAKO,MACrBlB,EAAcc,GACdZ,EAAgBS,EAAKM,MAAMH,SAG9B,IAEHR,qBAAU,WACY,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAgBM,EAAhB,oBAAwCE,IAC1CS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAgBS,EAAKM,MAAMlB,SAE5C,CAACF,EAAcE,IAYhB,8BACE,yBAAKoB,MAAM,WACT,yCAEF,kBAAC1C,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBiB,EAClBhB,iBAAkB,SAAAuC,GAAC,OAAItB,EAAgBsB,EAAEC,OAAOnC,QAChDJ,OAAQY,EACRX,eAnBN,SAAgCqC,GAC9BjB,EAAUiB,EAAEC,OAAOnC,OACnBmB,GAAwB,MAqBtB,kBAAC5B,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBmB,EAClBlB,iBAAkB,SAAAuC,GAAC,OAAIpB,EAAcoB,EAAEC,OAAOnC,QAC9CJ,OAAQW,EACRV,eAxBN,SAA8BqC,GAC5BjB,EAAUiB,EAAEC,OAAOnC,OACnBmB,GAAwB,QCrD5BiB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.f180c342.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function CurrencyRow(props) {\r\n    const {\r\n        currencyOptions,\r\n        selectedCurrency,\r\n        onChangeCurrency,\r\n        amount,\r\n        onChangeAmount\r\n    } = props\r\n    return (\r\n        <div className='segment'>\r\n            <label>\r\n                <input type='number' className='Email Address' value={amount} onChange={onChangeAmount} />\r\n            </label>\r\n            <select className='unit' value={selectedCurrency} onChange={onChangeCurrency}>\r\n                {currencyOptions.map(option => (\r\n                    <option key={option} value={option}>{option}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport CurrencyRow from './components/CurrencyRow';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\n\n\n\nconst URL = 'https://api.exchangeratesapi.io/latest'\n\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n\n  let toAmount, fromAmount\n  if (amountInFromCurrency) {\n    fromAmount = amount\n    toAmount = amount * exchangeRate\n  } else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n\n\n\n  useEffect(() => {\n    fetch(URL)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        const firstCurrency = Object.keys(data.rates)[0]\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n        setFromCurrency(data.base)\n        setToCurrency(firstCurrency)\n        setExchangeRate(data.rates[firstCurrency])\n\n      })\n  }, [])\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(res => res.json())\n        .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n  }, [fromCurrency, toCurrency])\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n  function handleToAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n\n  return (\n    <form>\n      <div class=\"segment\">\n        <h1>Exchange</h1>\n      </div>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={fromCurrency}\n        onChangeCurrency={e => setFromCurrency(e.target.value)}\n        amount={fromAmount}\n        onChangeAmount={handleFromAmountChange}\n      />\n      {/* <i class=\"fas faCo\"></ffeei> */}\n\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={e => setToCurrency(e.target.value)}\n        amount={toAmount}\n        onChangeAmount={handleToAmountChange}\n\n      />\n    </form>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}